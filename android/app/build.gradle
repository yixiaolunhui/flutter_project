def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        debug {
            storeFile file('../yixiaolunhui.jks')
            storePassword 'yixiaolunhui'
            keyPassword 'yixiaolunhui'
            keyAlias 'yixiaolunhui'
        }

        release {
            storeFile file('../yixiaolunhui.jks')
            storePassword 'yixiaolunhui'
            keyPassword 'yixiaolunhui'
            keyAlias 'yixiaolunhui'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.project.flutter_project"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    lintOptions {
        checkReleaseBuilds false
    }

    flavorDimensions "FlutterDemo"
    productFlavors {
        qa {
            dimension "FlutterDemo"
        }

        beta {
            dimension "FlutterDemo"
        }

        mp {
            dimension "FlutterDemo"
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def version = variant.versionName // 版本号
            def buildType = variant.buildType.name // 包类型，debug 还是 release
            def flavors = variant.productFlavors.name
            def createTime = new Date().format('yyyyMMddHHmm') // 打包时间 202109251645
            def fileName = "App_${version}_${buildType}_qa_${createTime}.apk"
            if (flavors.contains("mp")) {
                fileName = "App_${version}_${buildType}_mp_${createTime}.apk"
            } else if (flavors.contains("beta")) {
                fileName = "App_${version}_${buildType}_beta_${createTime}.apk"
            } else if (flavors.contains("qa")) {
                fileName = "App_${version}_${buildType}_qa_${createTime}.apk"
            } else {
                fileName = "App_${version}_${buildType}_qa_${createTime}.apk"
            }
            outputFileName = fileName
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
